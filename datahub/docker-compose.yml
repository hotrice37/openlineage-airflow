services:
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "echo", "ruok", "|", "nc", "zookeeper", "2181"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - zookeeper-data:/var/lib/zookeeper/data
      - zookeeper-log:/var/lib/zookeeper/log

  kafka:
    image: confluentinc/cp-kafka
    hostname: broker
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "broker:29092", "--list"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - kafka-data:/var/lib/kafka/data

  schema-registry:
    image: confluentinc/cp-schema-registry
    hostname: schema-registry
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: broker:29092
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    healthcheck:
      test: ["CMD", "curl", "-f", "http://schema-registry:8081"]
      interval: 10s
      timeout: 5s
      retries: 3

  elasticsearch:
    image: elasticsearch:7.17.28
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD", "curl", "-sS", "--fail", "http://elasticsearch:9200/_cluster/health?wait_for_status=yellow&timeout=0s"]
      interval: 10s
      timeout: 10s
      retries: 5
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - es-data:/usr/share/elasticsearch/data

  mysql:
    image: mysql
    hostname: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: datahub
      MYSQL_USER: datahub
      MYSQL_PASSWORD: datahub
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "datahub", "-pdatahub"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    volumes:
      - mysql-data:/var/lib/mysql

  datahub-kafka-setup:
    image: acryldata/datahub-kafka-setup:head
    hostname: kafka-setup
    depends_on:
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      SCHEMA_REGISTRY_URL: http://schema-registry:8081

  datahub-elasticsearch-setup:
    image: acryldata/datahub-elasticsearch-setup:head
    hostname: elasticsearch-setup
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200

  datahub-mysql-setup:
    image: acryldata/datahub-mysql-setup:head
    hostname: mysql-setup
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      EBEAN_DATASOURCE_HOST: mysql
      EBEAN_DATASOURCE_PORT: 3306
      EBEAN_DATASOURCE_USERNAME: datahub
      EBEAN_DATASOURCE_PASSWORD: datahub
      EBEAN_DATASOURCE_URL: jdbc:mysql://mysql:3306/datahub?verifyServerCertificate=false&useSSL=true&useUnicode=yes&characterEncoding=UTF-8
      WAIT_HOSTS: mysql:3306
      WAIT_HOSTS_TIMEOUT: 300  # Add longer timeout (5 minutes)
      WAIT_SLEEP_INTERVAL: 5   # Check every 5 seconds
      WAIT_HOST_CONNECT_TIMEOUT: 30  # Connection timeout per attempt

  datahub-upgrade:
    image: acryldata/datahub-upgrade:head
    hostname: datahub-upgrade
    restart: on-failure
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
      schema-registry:
        condition: service_healthy
      datahub-gms:
        condition: service_healthy
    environment:
      EBEAN_DATASOURCE_USERNAME: datahub
      EBEAN_DATASOURCE_PASSWORD: datahub
      EBEAN_DATASOURCE_HOST: mysql:3306
      EBEAN_DATASOURCE_URL: jdbc:mysql://mysql:3306/datahub?verifyServerCertificate=false&useSSL=true&useUnicode=yes&characterEncoding=UTF-8
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      KAFKA_SCHEMAREGISTRY_URL: http://schema-registry:8081
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      DATAHUB_GMS_HOST: datahub-gms
      DATAHUB_GMS_PORT: 8080
      DATAHUB_MAE_CONSUMER_HOST: datahub-mae-consumer
      DATAHUB_MAE_CONSUMER_PORT: 9091
      GRAPH_SERVICE_IMPL: elasticsearch
      NEO4J_HOST: ""
      NEO4J_URI: ""
      NEO4J_USERNAME: ""
      NEO4J_PASSWORD: ""
    command: ["-u", "NoCodeDataMigration"]

  datahub-gms:
    image: acryldata/datahub-gms:head
    hostname: datahub-gms
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
      kafka:
        condition: service_healthy
      datahub-mysql-setup:
        condition: service_completed_successfully
      datahub-elasticsearch-setup:
        condition: service_completed_successfully
      datahub-kafka-setup:
        condition: service_completed_successfully
    ports:
      - "8080:8080"
    environment:
      EBEAN_DATASOURCE_USERNAME: datahub
      EBEAN_DATASOURCE_PASSWORD: datahub
      EBEAN_DATASOURCE_HOST: mysql:3306
      EBEAN_DATASOURCE_URL: jdbc:mysql://mysql:3306/datahub?verifyServerCertificate=false&useSSL=true&useUnicode=yes&characterEncoding=UTF-8
      EBEAN_DATASOURCE_DRIVER: com.mysql.jdbc.Driver
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      JAVA_OPTS: -Xms2g -Xmx2g
      ENTITY_REGISTRY_CONFIG_PATH: /datahub/datahub-gms/resources/entity-registry.yml
      GRAPH_SERVICE_IMPL: elasticsearch
      NEO4J_HOST: ""
      NEO4J_URI: ""
      NEO4J_USERNAME: ""
      NEO4J_PASSWORD: ""
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5

  datahub-frontend-react:
    image: acryldata/datahub-frontend-react:head
    hostname: datahub-frontend-react
    depends_on:
      datahub-gms:
        condition: service_healthy
    ports:
      - "9002:9002"
    environment:
      DATAHUB_GMS_HOST: datahub-gms
      DATAHUB_GMS_PORT: 8080
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      DATAHUB_TRACKING_TOPIC: DataHubUsageEvent_v1
      DATAHUB_SECRET: YouShouldChangeThisValueToASecureString
      DATAHUB_PLAY_MEM_BUFFER_SIZE: 10MB
      DATAHUB_APP_VERSION: "1.0"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9002"]
      interval: 10s
      timeout: 10s 
      retries: 5

  datahub-mae-consumer:
    image: acryldata/datahub-mae-consumer:head
    hostname: datahub-mae-consumer
    restart: on-failure
    depends_on:
      datahub-gms:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      DATAHUB_GMS_HOST: datahub-gms
      DATAHUB_GMS_PORT: 8080

  datahub-mce-consumer:
    image: acryldata/datahub-mce-consumer:head
    hostname: datahub-mce-consumer
    restart: on-failure
    depends_on:
      datahub-gms:
        condition: service_healthy
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      ELASTICSEARCH_HOST: elasticsearch
      ELASTICSEARCH_PORT: 9200
      DATAHUB_GMS_HOST: datahub-gms
      DATAHUB_GMS_PORT: 8080

  datahub-ingestion:
    image: acryldata/datahub-ingestion:head
    hostname: datahub-ingestion
    depends_on:
      datahub-gms:
        condition: service_started
    environment:
      DATAHUB_GMS_HOST: datahub-gms
      DATAHUB_GMS_PORT: 8080

  datahub-actions:
    image: acryldata/datahub-actions:head
    hostname: datahub-actions
    depends_on:
      datahub-gms:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BOOTSTRAP_SERVER: broker:29092
      DATAHUB_GMS_HOST: datahub-gms
      DATAHUB_GMS_PORT: 8080

volumes:
  zookeeper-data:
  zookeeper-log:
  kafka-data:
  es-data:
  mysql-data:

networks:
  default:
    name: datahub_network
    driver: bridge